# Using the node alpine image to build the React app
image: node:alpine

# Announce the URL as per CRA docs
# https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#advanced-configuration
##variables:
##PUBLIC_URL: /domain
# Cache node modules - speeds up future builds
cache:
  paths:
    - node_modules/
  # key: "$CI_REPOSITORY_URL" # no need if not node project

# Name the stages involved in the pipeline
stages:
  - deploy

# Job name for gitlab to recognise this results in assets for Gitlab Pages
# https://docs.gitlab.com/ee/user/project/pages/introduction.html#gitlab-pages-requirements
pagesFirebase:
  stage: deploy
  script:
    - npm install # Install all dependencies
    - npm run build --prod # Build for prod
    #firebase deploy
    - npm install -g firebase-tools
    - firebase use $PROJECT_NAME --token $FIREBASE_TOKEN
    - firebase deploy --only hosting -m "Pipe $CI_PIPELINE_ID Build $CI_BUILD_ID @ Hash ${CI_COMMIT_SHA:0:7}" --token $FIREBASE_TOKEN
    #pages
    # - cp public/index.html public/404.html # Not necessary, but helps with https://medium.com/@pshrmn/demystifying-single-page-applications-3068d0555d46
    # - mv public _public # CRA and gitlab pages both use the public folder. Only do this in a build pipeline.
    # - mv build public # Move build files to public dir for Gitlab Pages
  artifacts:
    paths:
      - build # The built files for Gitlab Pages to serve
  only:
    - master # Only run on master branch
